name: Build and Deploy Debian Package

on:
  push:
    branches:
      - main  # 'main' 브랜치에 푸시될 때 워크플로우 실행

jobs:
  # --- 잡 1: 데비안 패키지 빌드 ---
  build:
    name: Build Debian Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential debhelper devscripts

      - name: Build the package
        # -us -uc: 소스 및 변경사항 파일에 서명하지 않음
        # -b: 바이너리 패키지만 빌드
        run: dpkg-buildpackage -us -uc -b

      - name: Upload.deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb-package
          path:../*.deb

  # --- 잡 2: APT 저장소 배포 ---
  deploy:
    name: Deploy APT Repository
    needs: build  # 'build' 잡이 성공해야 실행됨
    permissions:
      pages: write      # GitHub Pages에 배포하기 위한 권한
      id-token: write   # OIDC 토큰을 사용한 인증을 위한 권한
      contents: read    # 리포지토리 코드를 체크아웃하기 위한 권한
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository for public key
        uses: actions/checkout@v4

      - name: Download.deb artifact
        uses: actions/download-artifact@v4
        with:
          name: deb-package

      - name: Create APT Repository
        uses: morph027/apt-repo-action@v2
        with:
          repo-name: deb-test
          scan-dir:.
          signing-key: ${{ secrets.GPG_PRIVATE_KEY }}
          codename: stable
          components: main
          architectures: all
          # 기존 저장소의 상태를 유지하기 위해 현재 배포된 페이지에서 패키지 목록을 가져옴
          import-from-repo-url: |
            deb-all https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/ stable main

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'apt-repo/repo' # morph027/apt-repo-action의 기본 출력 디렉토리

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
